from functools import partial
import tkinter as tk
from updateRanges import *
from checkCancel import *
from allClasses import Drops
from validationFunc import *
prodList = ["assembly_battery_red", "assembly_battery_green",
            "assembly_battery_blue", "assembly_pump_red", "assembly_pump_green",
            "assembly_pump_blue", "assembly_regulator_red",
            "assembly_regulator_green", "assembly_regulator_blue", "assembly_sensor_red",
            "assembly_sensor_green", "assembly_sensor_blue"]  # list of all parts
def add_drop_region(dropsInfo):  # adds a drop region for the faulty gripper challenge
    """Adds a drop region for the faulty gripper challenge. Returned through dropsInfo"""
    add_drop_wind = tk.Toplevel()
    bin_or_agv = tk.StringVar()
    bin_or_agv.set('bin')
    drop_cancel_flag = tk.StringVar()
    drop_cancel_flag.set("0")
    temp_frame = tk.StringVar()
    temp_frame.set('')
    x_val_min = tk.StringVar()
    x_val_min.set('0')
    y_val_min = tk.StringVar()
    y_val_min.set('0')
    z_val_min = tk.StringVar()
    z_val_min.set('0')
    x_val_max = tk.StringVar()
    x_val_max.set('0')
    y_val_max = tk.StringVar()
    y_val_max.set('0')
    z_val_max = tk.StringVar()
    z_val_max.set('0')
    x_val_dest = tk.StringVar()
    x_val_dest.set('0')
    y_val_dest = tk.StringVar()
    y_val_dest.set('0')
    z_val_dest = tk.StringVar()
    z_val_dest.set('0')
    r_val_dest = tk.StringVar()
    r_val_dest.set('0')
    p_val_dest = tk.StringVar()
    p_val_dest.set('0')
    y_rpy_val_dest = tk.StringVar()
    y_rpy_val_dest.set('0')
    drop_prod = tk.StringVar()
    drop_prod.set(prodList[0])
    robot_type = tk.StringVar()
    robot_type.set('kitting')
    bin_or_agv_label = tk.Label(add_drop_wind, text="Over bin or over agv")
    bin_or_agv_label.pack()
    bin_or_agv_menu = tk.OptionMenu(add_drop_wind, bin_or_agv, "bin", "agv")
    bin_or_agv_menu.pack()
    drop_frame_label = tk.Label(add_drop_wind, text="Enter the frame")
    drop_frame_label.pack()
    drop_frame_entry = tk.Entry(add_drop_wind, textvariable=temp_frame)
    drop_frame_entry.pack()
    x_val_dest_label = tk.Label(add_drop_wind, text="Enter the destination x value")
    x_val_dest_label.pack()
    x_val_dest_entry = tk.Entry(add_drop_wind, textvariable=x_val_dest)
    x_val_dest_entry.pack()
    y_val_dest_label = tk.Label(add_drop_wind, text="Enter the destination y value")
    y_val_dest_label.pack()
    y_val_dest_entry = tk.Entry(add_drop_wind, textvariable=y_val_dest)
    y_val_dest_entry.pack()
    z_val_dest_label = tk.Label(add_drop_wind, text="Enter the destination z value")
    z_val_dest_label.pack()
    z_val_dest_entry = tk.Entry(add_drop_wind, textvariable=z_val_dest)
    z_val_dest_entry.pack()
    r_val_dest_label = tk.Label(add_drop_wind, text="Enter the r value for the destination")
    r_val_dest_label.pack()
    r_val_dest_entry = tk.Entry(add_drop_wind, textvariable=r_val_dest)
    r_val_dest_entry.pack()
    p_val_dest_label = tk.Label(add_drop_wind, text="Enter the p value for the destination")
    p_val_dest_label.pack()
    p_val_dest_entry = tk.Entry(add_drop_wind, textvariable=p_val_dest)
    p_val_dest_entry.pack()
    y_rpy_val_dest_label = tk.Label(add_drop_wind, text="Enter the y (rpy) value for the destination")
    y_rpy_val_dest_label.pack()
    y_rpy_val_dest_entry = tk.Entry(add_drop_wind, textvariable=y_rpy_val_dest)
    y_rpy_val_dest_entry.pack()
    drop_prod_label = tk.Label(add_drop_wind, text="Select the product type to drop")
    drop_prod_label.pack()
    drop_prod_menu = tk.OptionMenu(add_drop_wind, drop_prod, *prodList)
    drop_prod_menu.pack()
    drop_robot_type_label = tk.Label(add_drop_wind, text="Select the robot type for the drop")
    drop_robot_type_label.pack()
    drop_robot_type_menu = tk.OptionMenu(add_drop_wind, robot_type, "kitting", "gantry")
    drop_robot_type_menu.pack()
    cancel_drop_func = partial(cancel_func, add_drop_wind, drop_cancel_flag)
    cancel_drop_button = tk.Button(add_drop_wind, text="Cancel", command=cancel_drop_func)
    cancel_drop_button.pack()
    add_drop_save = tk.Button(add_drop_wind, text="Save and Exit", command=add_drop_wind.destroy)
    add_drop_save.pack()
    x_val_min_num_func=partial(require_num, x_val_min)
    x_val_min.trace('w', x_val_min_num_func)
    y_val_min_num_func=partial(require_num, y_val_min)
    y_val_min.trace('w', y_val_min_num_func)
    z_val_min_num_func=partial(require_num, z_val_min)
    z_val_min.trace('w', z_val_min_num_func)
    x_val_max_num_func=partial(require_num, x_val_max)
    x_val_max.trace('w', x_val_max_num_func)
    y_val_max_num_func=partial(require_num, y_val_max)
    y_val_max.trace('w', y_val_max_num_func)
    z_val_max_num_func=partial(require_num, z_val_max)
    z_val_max.trace('w', z_val_max_num_func)
    x_val_dest_num_func=partial(require_num, x_val_dest)
    x_val_dest.trace('w', x_val_dest_num_func)
    y_val_dest_num_func=partial(require_num, y_val_dest)
    y_val_dest.trace('w', y_val_dest_num_func)
    z_val_dest_num_func=partial(require_num, z_val_dest)
    z_val_dest.trace('w', z_val_dest_num_func)
    check_rpy = partial(rpy_validation, r_val_dest, p_val_dest, y_rpy_val_dest, add_drop_save)
    r_val_dest.trace('w', check_rpy)
    p_val_dest.trace('w', check_rpy)
    y_rpy_val_dest.trace('w', check_rpy)
    add_drop_wind.mainloop()
    if bin_or_agv.get()=="bin":
        x_val_min.set("-.03")
        y_val_min.set("-.03")
        z_val_min.set("1.0")
        x_val_max.set("0.3")
        y_val_max.set("0.3")
        z_val_max.set("3.0")
    else:
        x_val_min.set("-.03")
        y_val_min.set("-.03")
        z_val_min.set("0.0")
        x_val_max.set("0.3")
        y_val_max.set("0.3")
        z_val_max.set("0.5")
    add_quotes(r_val_dest)
    add_quotes(p_val_dest)
    add_quotes(y_rpy_val_dest)
    if drop_cancel_flag.get()=="0":
        dropsInfo.append(Drops(temp_frame.get(), str("["+x_val_min.get()+", "+y_val_min.get()+", "+z_val_min.get()+"]"),
                            str("["+x_val_max.get()+", "+y_val_max.get()+", "+z_val_max.get()+"]"),
                            str("["+x_val_dest.get()+", "+y_val_dest.get()+", "+z_val_dest.get()+"]"),
                            str("["+r_val_dest.get()+", "+p_val_dest.get()+", "+y_rpy_val_dest.get()+"]"),
                            drop_prod.get(), robot_type.get()))